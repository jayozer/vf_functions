{"functions":[{"id":"65e8d558993d1a459ef9c6f8","name":"checkopenhours","code":"export default async function main(args) {\n\n    // Assuming args.inputVars.currentime is the input variable\n    const { currentime } = args.inputVars;\n\n    // Validate input\n    if (!currentime) {\n        return generateTraceResponse('Error: No currentime was passed');\n    }\n\n    try {\n        // Simulating an API call structure based on the common template\n        // For illustration, as we can't make a real API call here\n        const status = determineOpenStatus(currentime);\n        \n        // Assuming API response is directly related to business hours\n        return {\n            outputVars: {\n                status: status // 'Open' or 'Closed'\n            },\n            // Conditional paths based on status could be added if your system supports it\n        };\n    } catch (error) {\n        return generateTraceResponse(`Error: ${error.message}`);\n    }\n}\n\nfunction determineOpenStatus(currentime) {\n    const timeRegex = /T(\\d{2}):(\\d{2})/;\n    const matches = currentime.match(timeRegex);\n\n    if (matches) {\n        const hour = parseInt(matches[1], 10);\n        const minute = parseInt(matches[2], 10);\n\n        // Determine if the time is within business hours\n        if ((hour > 9 || (hour === 9 && minute >= 0)) && (hour < 17 || (hour === 17 && minute === 0))) {\n            return \"Open\";\n        }\n    }\n    return \"Closed\";\n}\n\nfunction generateTraceResponse(message) {\n    return {\n        outputVars: {\n            status: message\n        },\n        trace: [\n            {\n                type: 'debug',\n                payload: {\n                    message: message\n                }\n            }\n        ],\n    };\n\n\n}","image":null,"description":"Function that takes Currenttime as an input. This function will parse the time from Currenttime, compare it to your specified open hours (9:00 to 17:00), and return \"Open\" or \"Closed\" based on the comparison. ","createdAt":"2024-03-06T20:43:04.000Z","updatedAt":"2024-03-06T21:11:41.000Z","folderID":null,"updatedByID":129982,"createdByID":129982}],"functionPaths":[],"functionVariables":[{"id":"65e8d5ae993d1a459ef9c6f9","name":"currentime","type":"input","description":"","createdAt":"2024-03-06T20:44:30.968Z","functionID":"65e8d558993d1a459ef9c6f8"},{"id":"65e8d947993d1a459ef9c72d","name":"{status}","type":"output","description":"","createdAt":"2024-03-06T20:59:51.748Z","functionID":"65e8d558993d1a459ef9c6f8"}]}